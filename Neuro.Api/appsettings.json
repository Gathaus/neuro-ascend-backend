{
  "ConnectionStrings": {
    "PostgreServer": "Host=db-postgresql-nyc3-48272-do-user-15119865-0.c.db.ondigitalocean.com;Port=25060;Database=neuro_ascend_mvp;Username=doadmin;Password=AVNS_AZDUg45ahNV9RWG_cQT;SslMode=VerifyCA;Trust Server Certificate=false;RootCertificate=./ca-certificate.crt;",
    "LogDB": "Host=db-postgresql-nyc3-48272-do-user-15119865-0.c.db.ondigitalocean.com;Port=25060;Database=neuro_ascend_mvp;Username=doadmin;Password=AVNS_AZDUg45ahNV9RWG_cQT;SslMode=VerifyCA;Trust Server Certificate=false;RootCertificate=./ca-certificate.crt;"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "System": "Information",
      "Microsoft": "Information"
    }
  },
  "Jwt": {
    "Key": "6AD2EFDE-AB2C-4841-A05E-7045C855BAasdfasdfasdfasdfsdfasdfasdfsdasdfsdfas22",
    "Issuer": "hhttps://localhost:44328",
    "Audience": "hhttps://localhost:44328"
  },
  "NLog": {
    "internalLogLevel": "Trace",
    "internalLogFile": "internal-nlog.txt",
    "throwConfigExceptions": true,
    "throwExceptions": true,
    "extensions": [
      {
        "assembly": "NLog.Extensions.Logging"
      },
      {
        "assembly": "NLog.Web.AspNetCore"
      },
      {
        "assembly": "NLog.Database"
      }
    ],
    "targets": {
      "async": true,
      "database": {
        "type": "Database",
        "dbProvider": "Npgsql.NpgsqlConnection, Npgsql",
        "connectionString": "${configsetting:name=ConnectionStrings.LogDB}",
        "commandText": "INSERT INTO \"logs\" (userid, email, userfullname, ipaddress, deviceid, version, datetime, errorcode, level, caller, userfriendlymessage, exceptionmessage, exceptionsource, exceptionstacktrace, controller, action, url, httpmethod, requestjson, responsejson, companyid, innerexceptionid) VALUES (@userid, @email, @username, @ip, @deviceId, @version, CAST(@date AS timestamp), @errorCode, @level, @caller, @UserFriendlyMessage, @expMessage, @expSource, @expStackTrace, @controller, @action, @url, @httpmethod, @request, @response, @companyId, @innerExceptionId)",
        "parameters": [
          {
            "name": "@controller",
            "layout": "${event-properties:controller}",
            "allowDbNull": true
          },
          {
            "name": "@action",
            "layout": "${event-properties:action}",
            "allowDbNull": true
          },
          {
            "name": "@ip",
            "layout": "${event-properties:ip}",
            "allowDbNull": true
          },
          {
            "name": "@httpmethod",
            "layout": "${event-properties:httpmethod}",
            "allowDbNull": true
          },
          {
            "name": "@url",
            "layout": "${event-properties:url}",
            "allowDbNull": true
          },
          {
            "name": "@request",
            "layout": "${event-properties:request}",
            "allowDbNull": true
          },
          {
            "name": "@response",
            "layout": "${event-properties:response}",
            "allowDbNull": true
          },
          {
            "name": "@date",
            "layout": "${date:format=yyyy-MM-dd HH\\:mm\\:ss.fffffff}",
            "dbType": "DbType.DateOnly",
            "allowDbNull": true
          },
          {
            "name": "@Level",
            "layout": "${level}",
            "allowDbNull": true
          },
          {
            "name": "@userid",
            "layout": "${event-properties:userId}",
            "dbType": "DbType.Int32",
            "allowDbNull": true
          },
          {
            "name": "@companyId",
            "layout": "${event-properties:companyId}",
            "dbType": "DbType.Int32",
            "allowDbNull": true
          },
          {
            "name": "@UserFriendlyMessage",
            "layout": "${event-properties:message}",
            "allowDbNull": true
          },
          {
            "name": "@caller",
            "layout": "${event-properties:caller}",
            "allowDbNull": true
          },
          {
            "name": "@expMessage",
            "layout": "${event-properties:exp-message}",
            "allowDbNull": true
          },
          {
            "name": "@expSource",
            "layout": "${event-properties:exp-source}",
            "allowDbNull": true
          },
          {
            "name": "@expStackTrace",
            "layout": "${event-properties:exp-stacktrace}",
            "allowDbNull": true
          },
          {
            "name": "@email",
            "layout": "${event-properties:email}",
            "allowDbNull": true
          },
          {
            "name": "@username",
            "layout": "${event-properties:username}",
            "allowDbNull": true
          },
          {
            "name": "@deviceId",
            "layout": "${event-properties:deviceId}",
            "allowDbNull": true
          },
          {
            "name": "@version",
            "layout": "${event-properties:version}",
            "allowDbNull": true
          },
          {
            "name": "@errorCode",
            "layout": "${event-properties:error-code}",
            "allowDbNull": true
          },
          {
            "name": "@innerExceptionId",
            "layout": "${event-properties:inner-exception-id}",
            "dbType": "DbType.Guid",
            "allowDbNull": true
          }
        ]
      }
    },
    "rules": [
      {
        "logger": "default",
        "minLevel": "Debug",
        "writeTo": "database"
      }
    ]
  },

  "RabbitMQ": {
    "Url": ""
  },
  "AllowedHosts": "*"
}


